generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  login    String
  password String
  address  String?
  phone    String
  role     Role    @default(CUSTOMER)

  avaluated Evaluations[]
  favorited Favorites[]
  purchases Purchase[] // lado 1 do relacionamento 1:N com Purchase

  @@map("users")
}

model Category {
  id          String  @id @default(uuid())
  name        String
  description String?

  products CategoriesOnProducts[]

  @@map("categories")
}

model Product {
  id          String  @id @default(uuid())
  name        String
  description String?
  price       Float
  amount      Int
  photo       String?

  evaluatedBy Evaluations[]
  favoritedBy Favorites[]
  categories  CategoriesOnProducts[]
  products    ProductsOnPurchases[]

  @@map("products")
}

model Purchase {
  id    String   @id @default(uuid())
  date  DateTime @db.Date
  hours DateTime @db.Time()

  products ProductsOnPurchases[]

  customer   User   @relation(fields: [customerId], references: [id])
  customerId String

  @@map("purchases")
}

model Favorites {
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@id([userId, productId])
  @@map("user_favorite_products")
}

model Evaluations {
  evaluation Int

  user      User    @relation(fields: [userId], references: [id])
  userId    String
  product   Product @relation(fields: [productId], references: [id])
  productId String

  @@id([productId, userId])
  @@map("users_evaluated_products")
}

model ProductsOnPurchases {
  amount Int

  product    Product  @relation(fields: [productId], references: [id])
  productId  String
  purchase   Purchase @relation(fields: [purchaseId], references: [id])
  purchaseId String

  @@id([productId, purchaseId])
  @@map("products_on_purchases")
}

model CategoriesOnProducts {
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId String
  product    Product  @relation(fields: [productId], references: [id])
  productId  String

  @@id([categoryId, productId])
  @@map("categories_on_products")
}

enum Role {
  ADMIN    @map("admin")
  CUSTOMER @map("customer")

  @@map("_Role")
}
